# D3 I3 Chord -> Chord HCQT 2D
output_file: {'origin': 'TUTO_task_Auto_Tagging.ipynb', 'ext': '_D3-I3-Chord.ipynb'}
dataset:
    # D3
    {'base': rwc-pop_chord, 'problem': segment, 'annot_key': chord, 'n_out': 25}
feature:
    # I3
    {'type': hcqt, 'nb_band': 72, 'h_l': [1] ,'bins_per_semitone': 1, 'n_octaves': 6, 'fmin': 32.7,  'hop_length': 512, 'patch_L_frame': 1024, 'patch_STEP_frame': 128}
model:
    name: Chord
    block_l:
    # Chord
    - sequential_l:
        - layer_l:
            - [LayerNorm, {'normalized_shape': -1}]
            - [Conv2d, {'in_channels': -1, 'out_channels': 32, 'kernel_size': [1, 5], 'stride': [1,1], 'padding': 'same'}]
            - [Activation, LeakyReLU]
        - layer_l:
            - [LayerNorm, {'normalized_shape': -1}]
            - [Conv2d, {'in_channels': -1, 'out_channels': 32, 'kernel_size': [5, 1], 'stride': [3,1]}]
            - [Activation, LeakyReLU]
        - layer_l:
            - [LayerNorm, {'normalized_shape': -1}]
            - [Conv2d, {'in_channels': -1, 'out_channels': 32, 'kernel_size': [5, 1], 'stride': [3,1]}]
            - [Activation, LeakyReLU]
        - layer_l:
            - [LayerNorm, {'normalized_shape': -1}]
            - [Conv2d, {'in_channels': -1, 'out_channels': 32, 'kernel_size': [5, 1], 'stride': [3,1]}]
            - [Activation, LeakyReLU]
            - [Squeeze, {'dim': [2]}] # --- (B, C, H=F, W=T) -> (B, C, T)
        - layer_l:
            - [LayerNorm, {'normalized_shape': -1}]
            - [Conv1d, {'in_channels': -1, 'out_channels': 16, 'kernel_size': 15, 'stride': 1, 'padding': 'same'}]
            - [Activation, LeakyReLU]
        - layer_l:
            - [LayerNorm, {'normalized_shape': -1}]
            - [Conv1d, {'in_channels': -1, 'out_channels': 16, 'kernel_size': 15, 'stride': 1, 'padding': 'same'}]
            - [Activation, LeakyReLU]
        - layer_l:
            - ['Permute', {'shape': [0, 2, 1]}] # --- (B, C, T) -> (B, T, C)
        - layer_l:
            - [LSTMall, {'input_size': -1, 'hidden_size': 16, 'num_layers': 1}] # --- Suppose (B, T, C)
    - sequential_l:
        - layer_l:
            - [Linear, {'in_features': -1, 'out_features': 25}]
            - [Activation, LeakyReLU]
        - layer_l:
            - ['Permute', {'shape': [0, 2, 1]}] # --- (B, T, C) -> (B, C, T)
